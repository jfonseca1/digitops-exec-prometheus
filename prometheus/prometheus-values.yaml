prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}

    additionalScrapeConfigs:
      - job_name: 'blackbox'
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - digitops-service-service.digitops.svc:8000 # Target URL to probe
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            # Using the exact service name from kubectl describe output
            replacement: blackbox-exporter-prometheus-blackbox-exporter.monitoring.svc:9115

customRules:
  ServiceHTTPResponseNotOK:
    severity: "warning"

additionalPrometheusRulesMap:
  http-response-rules:
    groups:
      - name: http-service-monitoring
        rules:
        - alert: ServiceHTTPResponseNotOK
          annotations:
            description: "HTTP service {{ $labels.instance }} has been responding with non-200 status codes for more than 5 minutes"
            runbook_url: "https://your-runbook-url.com/runbooks/service/servicehttpresponsenotok"
            summary: "Service is not responding with HTTP 200 status code"
          expr: |
            rate(http_requests_total{status!="200"}[5m]) > 0
            and
            rate(http_requests_total{status="200"}[5m]) == 0
          for: 5m
          labels:
            severity: warning
            service: "{{ $labels.service }}"
            instance: "{{ $labels.instance }}"

        # Additional alert for high error rate
        - alert: ServiceHighErrorRate
          annotations:
            description: "HTTP service {{ $labels.instance }} has more than 10% error rate over the last 5 minutes"
            runbook_url: "https://your-runbook-url.com/runbooks/service/servicehigherrorrate"
            summary: "Service has high HTTP error rate"
          expr: |
            sum(rate(http_requests_total{status!="200"}[5m])) by (instance)
            /
            sum(rate(http_requests_total[5m])) by (instance) > 0.1
          for: 5m
          labels:
            severity: warning
            service: "{{ $labels.service }}"
            instance: "{{ $labels.instance }}"              
